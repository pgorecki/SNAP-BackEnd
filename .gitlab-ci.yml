variables:
  APP_NAME: 'backend'

stages:
  - test
  - build
  - deploy

pytest-all:
  stage: test
  image: python:3.7
  before_script:
    - pip install --upgrade pip
    - pip install pipenv
    - pipenv install --system --dev
  script:
    - pytest src
  except:
    - /^wip-.*$/

docker-build:
  stage: build
  image: docker:latest
  only:
    - master
  variables:
    DOCKER_DRIVER: "overlay2"
  services:
    - docker:dind
  before_script:
    - docker version
    - docker info
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_BEFORE_SHA} || true
    - docker pull ${CI_REGISTRY_IMAGE}/app:latest || true
    - docker build --cache-from ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_BEFORE_SHA} --cache-from ${CI_REGISTRY_IMAGE}/app:latest -t ${CI_REGISTRY_IMAGE}/app:latest -t ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHA} .
    - docker push ${CI_REGISTRY_IMAGE}/app:latest
    - docker push ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHA}
  after_script:
    - docker logout ${CI_REGISTRY}

deploy-staging:
  stage: deploy
  image: kroniak/ssh-client
  only:
    - master
  services:
    - docker:dind

  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - echo "${STAGE_KEY}" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H ${STAGE_HOST} >> ~/.ssh/known_hosts
  script:
    - scp ./docker-compose.deploy.yml ${STAGE_USER}@${STAGE_HOST}:~/docker-compose/${APP_NAME}/docker-compose.yml
    - >
      ssh ${STAGE_USER}@${STAGE_HOST} << EOF
        docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
        cd ~/docker-compose/${APP_NAME}/
        sed -i -e 's#COMPOSE_APP_IMAGE=.*#COMPOSE_APP_IMAGE=${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHA}#' .env
        sed -i -e 's#BUILD_VERSION=.*#BUILD_VERSION=${CI_COMMIT_SHA}#' .env
        docker pull ${CI_REGISTRY_IMAGE}/app:${CI_COMMIT_SHA}
        docker-compose rm --force app
        docker-compose up -d app
      EOF
